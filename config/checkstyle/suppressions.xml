<?xml version="1.0"?>
<!DOCTYPE suppressions PUBLIC
    "-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN"
    "https://checkstyle.org/dtds/suppressions_1_2.dtd">

<!--
    Checkstyle Suppressions - Enterprise Spring Boot Standards

    @author Architecture Team (arch-team@company.com)
    @since 2024-01-01
-->

<suppressions>
    <!-- ========================================
         @ConfigurationProperties Classes
         Setters are required by Spring Framework
         ======================================== -->
    <suppress checks="Regexp"
              files=".*Properties\.java$"
              message="Setter methods detected in Entity class"/>

    <!-- ========================================
         EventBridge Adapter
         Uses @TransactionalEventListener, not @Transactional
         ======================================== -->
    <suppress checks="Regexp"
              files=".*EventBridgeAdapter\.java$"
              message="@Transactional detected in adapter package"/>

    <!-- ========================================
         Schedule Event Handler
         Uses @TransactionalEventListener, not @Transactional
         ======================================== -->
    <suppress checks="Regexp"
              files=".*ScheduleEventBridgeHandler\.java$"
              message="@Transactional detected in adapter package"/>

    <!-- ========================================
         AWS EventBridge Config Package
         Spring configuration classes need @Transactional reference
         ======================================== -->
    <suppress checks="Regexp"
              files=".*adapter/config/.*\.java$"
              message="@Transactional detected in adapter package"/>

    <!-- ========================================
         Application Layer UseCase Services
         Application layer is the correct place for @Transactional
         ======================================== -->
    <suppress checks="Regexp"
              files=".*application/.*\.java$"
              message="@Transactional detected in adapter package"/>

    <!-- ========================================
         Redis Adapter Test Files
         Test method names use given_when_then pattern with underscores
         ======================================== -->
    <suppress checks="MethodName" files=".*redis.*Test\.java$"/>

    <!-- ========================================
         Redis Adapter - Author Tag Simplified
         Internal project, simplified author format
         ======================================== -->
    <suppress checks="JavadocType" files=".*redis.*\.java$"/>

    <!-- ========================================
         Redis Adapter - DTO Inner Classes
         Simple data holder classes don't need Javadoc
         ======================================== -->
    <suppress checks="MissingJavadocMethod" files=".*redis.*\.(RateLimitResult|BucketStatus|LockHandle|CircuitStatus|CircuitState|HealthStatus|ConnectionPoolStatus)\.java$"/>

    <!-- ========================================
         Redis Adapter - CircuitBreakerManager Status Constructor
         CircuitStatus requires 6 parameters for complete state
         ======================================== -->
    <suppress checks="ParameterNumber" files=".*CircuitBreakerManager\.java$"/>

    <!-- ========================================
         Redis Adapter - String Concatenation Style
         toString() methods use string concatenation for readability
         ======================================== -->
    <suppress checks="OperatorWrap" files=".*redis.*\.java$"/>

    <!-- ========================================
         Logger Constant Naming
         SLF4J logger follows standard lowercase 'log' convention
         Applied to: redis, application, adapter-in
         ======================================== -->
    <suppress checks="ConstantName" files=".*redis.*\.java$" message=".*log.*"/>
    <suppress checks="ConstantName" files=".*/application/.*\.java$" message=".*log.*"/>
    <suppress checks="ConstantName" files=".*/adapter-in/.*\.java$" message=".*log.*"/>

    <!-- ========================================
         Redis Adapter - Constructor Javadoc
         Simple constructor parameter assignment doesn't need Javadoc
         ======================================== -->
    <suppress checks="MissingJavadocMethod" files=".*redis.*\.java$"/>

    <!-- ========================================
         Persistence-MySQL Test Files
         Test method names use given_when_then pattern with underscores
         Test helper methods may exceed 5 parameters for convenience
         ======================================== -->
    <suppress checks="MethodName" files=".*persistence-mysql/src/test/.*Test\.java$"/>
    <suppress checks="ParameterNumber" files=".*persistence-mysql/src/test/.*Test\.java$"/>

    <!-- ========================================
         Common DTO - PageResponse and SliceResponse
         Java Record factory methods require multiple parameters for complete state
         ======================================== -->
    <suppress checks="ParameterNumber" files=".*(PageResponse|SliceResponse)\.java$"/>

    <!-- ========================================
         Domain Outbox - SellerCrawlScheduleOutbox
         Persistence restoration factory method requires all 12 fields for complete state
         (Orchestrator SDK Transactional Outbox Pattern)
         ======================================== -->
    <suppress checks="ParameterNumber" files=".*SellerCrawlScheduleOutbox\.java$"/>

    <!-- ========================================
         JPA Entity - SellerCrawlScheduleOutboxEntity
         Immutable entity pattern requires private all-args constructor with 18 fields
         Static factory methods use this constructor for state changes
         (Orchestrator SDK Transactional Outbox Pattern with Immutability)
         ======================================== -->
    <suppress checks="ParameterNumber" files=".*SellerCrawlScheduleOutboxEntity\.java$"/>
</suppressions>
